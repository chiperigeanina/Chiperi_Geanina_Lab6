<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chiperi_Geanina_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Chiperi_Geanina_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="379" Margin="10,20,0,0" VerticalAlignment="Top" Width="759">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" Margin="0,5,0,6" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="97*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="641*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="221,26,20,177" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="221,239,0,0" VerticalAlignment="Top" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="51,58,0,0" VerticalAlignment="Top" Width="75" Click="btnNew_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="51,102,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="51,148,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="51,244,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click" Grid.ColumnSpan="3">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
         
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="51,288,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Margin="221,182,0,0" VerticalAlignment="Top" Width="75" Click="btnPrev_Click" Grid.Column="2"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="546,182,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click" Grid.Column="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="317*"/>
                        <RowDefinition Height="34*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="grid2" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="85,62,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="41"/>
                            <ColumnDefinition Width="85"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <Grid x:Name="grid3" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="300,86,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <Grid x:Name="grid4" DataContext="{StaticResource inventoryViewSource}" HorizontalAlignment="Left" Margin="232,154,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="320,33,33,180" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewI" Content="New" HorizontalAlignment="Left" Margin="47,36,0,0" VerticalAlignment="Top" Width="75" Click="btnNewI_Click"/>
                    <Button x:Name="btnEditI"  Content="Edit" HorizontalAlignment="Left" Margin="47,71,0,0" VerticalAlignment="Top" Width="75" Click="btnEditI_Click"/>
                    <Button x:Name="btnDeleteI"  Content="Delete" HorizontalAlignment="Left" Margin="47,108,0,0" VerticalAlignment="Top" Width="75" Click="btnDeleteI_Click"/>
                    <Button x:Name="btnSaveI"  Content="Save" HorizontalAlignment="Left" Margin="47,232,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveI_Click"/>
                    <Button x:Name="btnCancelI"  Content="Cancel" HorizontalAlignment="Left" Margin="47,272,0,0" VerticalAlignment="Top" Width="75" Click="btnCancelI_Click"/>
                    <Button x:Name="btnPrevI"  Content="Previous" HorizontalAlignment="Left" Margin="320,168,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevI_Click"/>
                    <Button x:Name="btnNextI"  Content="Next" HorizontalAlignment="Left" Margin="645,168,0,0" VerticalAlignment="Top" Width="75" Click="btnNextI_Click"/>
                    <Grid x:Name="grid5" HorizontalAlignment="Left" Margin="437,211,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="17"/>
                            <ColumnDefinition Width="109"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Orders" Margin="-2,-2,-23,0">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="27*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition Width="710*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="192,48,0,0" VerticalAlignment="Top" Width="120" Grid.Column="3">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="472,49,0,0" VerticalAlignment="Top" Width="120" Grid.Column="3">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" Margin="192,24,0,0" VerticalAlignment="Top" Height="25" Width="120" Grid.Column="3"/>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" Margin="472,23,0,0" VerticalAlignment="Top" Grid.Column="3"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewO" Content="New" Grid.Column="3" HorizontalAlignment="Left" Margin="5,46,0,0" VerticalAlignment="Top" Width="75" Click="btnNewO_Click"/>
                    <Button x:Name="btnEditO" Content="Edit" Grid.Column="3" HorizontalAlignment="Left" Margin="5,89,0,0" VerticalAlignment="Top" Width="75" Click="btnEditO_Click"/>
                    <Button x:Name="btnDeleteO" Content="Delete" Grid.Column="3" HorizontalAlignment="Left" Margin="5,128,0,0" VerticalAlignment="Top" Width="75" Click="btnDeleteO_Click"/>
                    <Button x:Name="btnSaveO" Content="Save" Grid.Column="3" HorizontalAlignment="Left" Margin="5,213,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveO_Click"/>
                    <Button x:Name="btnCancelO" Content="Cancel" Grid.Column="3" HorizontalAlignment="Left" Margin="5,255,0,0" VerticalAlignment="Top" Width="75" Click="btnCancelO_Click"/>
                    <Button x:Name="btnPreO" Content="Previous" Grid.Column="3" HorizontalAlignment="Left" Margin="192,240,0,0" VerticalAlignment="Top" Width="75" Click="btnPreO_Click"/>
                    <Button x:Name="btnNextO" Content="Next" Grid.Column="3" HorizontalAlignment="Left" Margin="517,240,0,0" VerticalAlignment="Top" Width="75" Click="btnNextO_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
